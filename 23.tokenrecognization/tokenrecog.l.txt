%{
#include <stdio.h>
#include <string.h>
%}

%%

[0-9]+           { printf("NUMBER: %s\n", yytext); }   // Numbers
[A-Za-z_][A-Za-z0-9_]*  { printf("IDENTIFIER: %s\n", yytext); } // Identifiers
"="               { printf("ASSIGNMENT OPERATOR: %s\n", yytext); } // Assignment operator
[+\-*/]           { printf("ARITHMETIC OPERATOR: %s\n", yytext); } // Arithmetic operators
[;,()\[\]{}]      { printf("PUNCTUATION: %s\n", yytext); }  // Punctuation
"=="              { printf("EQUALITY OPERATOR: %s\n", yytext); }  // Equality operator
"!="              { printf("INEQUALITY OPERATOR: %s\n", yytext); } // Inequality operator
"&&"              { printf("LOGICAL OPERATOR: %s\n", yytext); } // Logical AND
"\|\|"            { printf("LOGICAL OPERATOR: %s\n", yytext); } // Logical OR
"!"               { printf("LOGICAL NOT OPERATOR: %s\n", yytext); } // Logical NOT
[ \t\n]+          { /* Skip whitespace */ }
.                 { printf("UNKNOWN: %s\n", yytext); }  // Any other character

%%

int yywrap() {
    return 1;
}

int main() {
    yyin = fopen("tokenrecog.txt", "r");  // Open the input file
    if (!yyin) {
        perror("Failed to open input file");
        return 1;
    }
    yylex();  // Perform lexical analysis
    fclose(yyin);  // Close the input file
    return 0;
}
